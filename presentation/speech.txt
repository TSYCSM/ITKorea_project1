[ppt]
탁승연 최시민 조 발표 하겠습니다





-------------------------------------------------------------------------------------------------------------------





저희 조는 이번에 node.js로 시와 이야기를 공유할 수 있는 사이트를
제작하였습니다

결국에는 게시판 사이트를 만들어 보기로 한건데..






-------------------------------------------------------------------------------------------------------------------





이번 프로젝트는 이런 식으로 구성되었습니다

	전체적으로는

		기획 & 디자인
		CRUD
		Session 처리

	이렇게 총 3가지로 이루어져있는데,

	1. 먼저 기획을 할 때 중요시 했던 부분은 

		심플하면서 강조되도록 디자인해서
 
		기능에 쉽게 접근할 수 있도록 하는 것이었습니다.

		또, 사용자가 방문했을 때, 핵심기능. 예를 들면

			글쓰기나 로그인, 로그아웃 등 

			이런 것들을 바로바로 사용할 수 있도록 했습니다

		사이트 특성 상 사용자의 감성을 이끌어 낼 수 있어야하기 때문에 

			노을빛을 모티브로 제작했습니다
			
	2. 그 다음은 CRUD입니다. 
		
		글을 쓰고 읽고 수정하고 지우는 게시판의 필수적인 기능은

		Node.js와 ejs, 그리고 mysql로 구현했습니다.

	3. 마지막으로 로그인 했을 때만 이용할 수 있게 하거나, 사용자가 누군지 판별해내는 

		Session처리는 JSON을 VO로써 사용해서 해결했습니다.

		여기서 Session처리만 좀 자세하게 설명하겟습니다.







-------------------------------------------------------------------------------------------------------------------






	session처리의 구현 방식은(펜 사용)

		로그인을 할 때, userJson에 사용자의 각종 정보들이 담깁니다.

		그래서 나중에 사용자 정보를 사용해야할 때, 여기서 정보를 받아와 쓰고,

		로그아웃을 하면 밑에 있는 emptyJson으로 userJson의 값을 초기화 시킵니다.

		따라서 userJson에 정보가 담겨있는지 보고, 로그인 여부를 얻어올 수 있습니다.






-------------------------------------------------------------------------------------------------------------------







[시연]

프로젝트 결과물을 보여드리겠습니다

페이지에 접속하면

시를 읽어볼 수 있고..

밑으로 쭉 내려봅니다

	n명의 이야기에서 n은 전체 회원수를 의미합니다

	공감 작품과 공감 이야기는 조회수가 많은 순으로 정렬되어서 

		상위 5개의 작품만 보여지게 됩니다

		작품 영역에는 아직 글이 하나도 없어서 작품이 없다는 문구가 뜨고 있습니다

	시루는...

		여기는 사이트 소개고, 

	시루 사용법

		사이트를 어떻게 이용할 수 있는지 알려주고 있습니다

	로그인

		이부분은 로그인 회원가입 영역인데 일단 좀 둘러보겠습니다


	공감이야기의 글을 누르면 해당 글로 바로 이동할 수 있습니다.

	(누른다)

		글 상세 페이지에서는 제목과 글, 작성자가 위치하고,

		여기 이 눈 모양은 조회수를 의미합니다

		밑에는 댓글이 있습니다

		댓글을 쓰는 영역은 지금은 로그인을 안해서 나타나지가 않고,

			댓글 작성자, 내용, 등록일을 나타내고 있습니다

		조회수는 지금이 n만큼 인데 (사는 이야기 눌렀다 다시 들어와보기)

			조회수가 올라가게 됩니다

	로고를 눌러서 홈으로 갈 수 있고,

	글을 한번 써보겠습니다

		글 쓰기 버튼은 항상 따라다니고... 눌렀을 때, 로그인을 하지 않았기 때문에

		글을 쓸 수가 없습니다

가입하기

	유효성 검사 보여주기

	이렇게 등록이 되면,,

	로그인을 할 수 있습니다

	(로그인을 한다)

	이제 로그인이 된 상태이기 때문에 우측 상단의 로그 글씨가 로그아웃으로 변했다

	그리고 아래의 로그인, 가입하기 영역이 사라집니다

이제는 로그인을 했기 때문에 글을 쓸 수 있습니다

(글쓰기 -> 작품 탭에 글 쓰기)






하늘과 바람과 별과 시



죽는 날까지 하늘을 우러러
한 점 부끄럼이 없기를,
잎새에 이는 바람에도
나는 괴로와했다.
별을 노래하는 마음으로
모든 죽어가는 것을 사랑해야지
그리고 나에게 주어진 길을
걸어가야겠다.

오늘 밤에도 별이 바람에 스치운다.







게시판에 등록된 글은 최신 순으로 나열되고,

		글넘버, 글제목, 작성자, 조회수가 보여지게 됩니다

		또한 이 조회수로 메인 페이지의 공감 작품과 이야기가 결정된다

	다른 사람의 글을 들어가면

		여기에는 수정 삭제 버튼이 없습니다

		하지만, 내 글에 들어가면 보인다

	(수정하기)

	(삭제하기)

다른 글로 가서 댓글을 한번 달아보겟습니다

	보시다시피 로그인 안했을때는 댓글 영역이 보이지 않았는데

		 지금은 댓글을 쓸 수 있다

	(쓴다 -> 등록한다)

	(수정한다)

		이때는 조회수가 안 올라가도록 했다.

	(삭제한다)

(마이 페이지 접속)

	마이페이지에서는 회원정보를 볼 수가 있습니다.

	또한 변경할 수도 있습니다.

	(비밀번호, 닉네임 변경하기)

이제 사이트를 다 봤으니까 로그아웃을 하겠습니다.

	로그아웃을 하면 로그인했을 때는 없었던 로그인버튼으로 다시 바뀌고

	(버튼을 누른다)

	로그인과 가입 폼이 다시 나타나게 됩니다

그리고 나중에 아이디가 기억이 안날 때 아이디찾기로 아이디를 찾을 수 있습니다

	(틀린 이메일 쳐보기)

	(맞는 이메일 쳐보기)

또 admin계정ㅇ으로 접속하면 모든 회원을 볼 수 있는 관리자창에 접속할 수 있습ㄴ디ㅏ

	(admin으로 로그인)
	
	마이페이지에 들어가서

		일반 유저는 들어갈 수 없는 모든 회원 목록보기 버튼이 생깁니다.

		여기서 모든 회원의 정보를 볼 수 있습니다

	마이페이지에서 모든 회원 목록보기를 누르면

	모든 회원의 정보를 볼 수 있다

그리고 마지막으로 사용자가 데스크탑, 태블릿, 스마트 폰으로 볼 수도 있기 때문에 

	어디서 작동해도 잘 보일 수 있도록 처리했습니다







-------------------------------------------------------------------------------------------------------------------






총 제작기간은 약 15일 정도 되었습니다.

	처음에 기획할 때, 

		노드 js를 배우면서 

		전부터 만들어보고 싶던걸 구상해놨는데

		덕분에 기획과 디자인 틀이 좀 잡혀있었고, 나름 빠르게 진행되었습니다.
		
	4일차 부터는 node.js 복습하면서 express 모듈을 써서 페이지 이동 기능을 만들었습니다

	그리고 제작이 일주일 정도가 지나서 CRUD를 위한 DB설계를 했습니다.

		저희는 mysql을 썻는데, 사실 db설계는 이때 딱 끝난게 아니고,

		하면서 수정하고 추가한 부분도 좀 있었던거 같습니다.

	Session 구현은 많이 어렵지는 않았지만, 페이지마다 적용시키고,

		또 그로 인한 오류를 잡느라 시간이 생각보다 좀 걸렸습니다

	마지막으로는 댓글 구현 아이디찾기, 

		자잘한 디자인 수정 등으로 마무리를 지었습니다





-------------------------------------------------------------------------------------------------------------------
	



	

DB는 총 6개로 구성했습니다

	member에서는 사용자의 정보를 담았고,

	장르는 사용자마다 항목이 중복되기 때문에 따로 빼서

		member_genre로 분할시켰습니다

	그리고 작품과 이야기를 위한 table에는 조회수, 제목, 작성자, 내용 등의 field가 있고,

	댓글 table은 어떤 글에 쓰여졌는지를 알아야 하기 때문에 story_id를 넣어주었습니다





-------------------------------------------------------------------------------------------------------------------





마지막으로 개선할 점은 

	첫번째로, 각각의 ejs로 페이지를 전환할 때마다 userJson을 넘겨야하는 불편함이 있엇다

		그래서 이 부분은 좀 더 배우면 해결되지 않을 까 생각이 들고..

	그리고, 댓글을 수정하거나 삭제할 때, 댓글만 바뀌면 되는데 페이지가 새로고침 되어 버렸습니다.

		그래서 댓글만 올려도 조회수가 올라가는 문제가 있었습니다.

	또 혼자 작업하는게 아니다 보니까 파일을 합칠 때 좀 불편했습니다.

		git을 사용하기는 했지만, 다음번 프로젝트에서는 branch를 merge하는

			그런 기능을 좀 더 익혀야 겠다라고 팀원 모두가 그렇게 생각했습니다

	또 개인적으로 느낀 부분은 

		배운 부분에서 전부 해결하려고 하다보니까 모듈이나 이런 것들을 사용하면 더 좋겠다.

			더 배우면 좋겠다 생각이 들었고,

		프로젝트가 작아도 이렇게 복잡한데, 커지면 커질 수록 변수명,함수명 같은 걸

			명시적을 잘 주는게 중요하다 느꼈고
	
		디자이너와 개발자 간의 소통이 진짜 중요하겠구나 싶었습니다

		앞으로도 배우는 것들을 이용해서 추가하고 보수해 나갈 계획입니다.


궁금한게 있으시면 물어봐주시면 되겠습ㄴ디ㅏ












